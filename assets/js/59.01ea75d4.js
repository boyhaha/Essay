(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{423:function(n,l,v){"use strict";v.r(l);var t=v(44),_=Object(t.a)({},(function(){var n=this,l=n.$createElement,v=n._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[v("h1",{attrs:{id:"_14-http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_14-http"}},[n._v("#")]),n._v(" 14-HTTP")]),n._v(" "),v("ol",[v("li",[v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("post和get的区别")]),n._v(" "),v("ol",[v("li",[n._v("GET 的本质是「得」，而 POST 的本质是「给」.GET 是「幂等」的，在这一点上，GET 被认为是「安全的」(不会对服务器的数据进行修改)")]),n._v(" "),v("li",[n._v("GET请求在URL中传送的参数是有长度限制的，而POST没有,一般由服务器设定限制\n"),v("ul",[v("li",[n._v("请求长度是由浏览器和web决定和设置,get请求其实没有限制")])])]),n._v(" "),v("li",[n._v("对参数的数据类型，GET只接受ASCII字符，而POST没有限制")]),n._v(" "),v("li",[n._v("GET参数通过URL传递，POST放在Request body中,相对安全一点\n"),v("ul",[v("li",[n._v("但如果没有加密,随便一个监听器都可以把所有的数据监听到。")])])]),n._v(" "),v("li",[n._v("GET请求能够被cache，会保存在历史记录里面.POST默认不进行缓存。")]),n._v(" "),v("li",[v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("post和get的本质区别")]),n._v(" "),v("ol",[v("li",[n._v("HTTP的底层是TCP。所以GET和POST的底层也是TCP，也就是说，GET/POST都是TCP链接。")]),n._v(" "),v("li",[n._v("但是由于HTTP的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同")]),n._v(" "),v("li",[n._v("GET产生一个TCP数据包；POST产生两个TCP数据包\n"),v("ul",[v("li",[n._v("对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；")]),n._v(" "),v("li",[n._v("而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据））")])])])])]),n._v(" "),v("li",[n._v("GET替换POST优化网站性能的可行性\n"),v("ol",[v("li",[n._v("GET与POST都有自己的语义，不能随便混用。")]),n._v(" "),v("li",[n._v("据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。")]),n._v(" "),v("li",[n._v("并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。")])])])])]),n._v(" "),v("li",[n._v("Tips\n"),v("ol",[v("li",[n._v("get请求参数大小：\n"),v("ol",[v("li",[n._v("对于IE浏览器，限制url的长度是2083字符")]),n._v(" "),v("li",[n._v("谷歌浏览器限制请求的url长度是8182个字符")])])]),n._v(" "),v("li",[n._v("cookie限制\n"),v("ol",[v("li",[n._v("大小4KB")]),n._v(" "),v("li",[n._v("Google限制个数最多为53个")])])]),n._v(" "),v("li",[n._v("HTTP和https\n"),v("ol",[v("li",[v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("HTTP+加密+认证+完整性保护 = HTTPS")])]),n._v(" "),v("li",[n._v("HTTP：是互联网上应用最为广泛的一种网络协议，是一个客户端和服务器端请求和应答的标准（TCP），用于从WWW服务器传输超文本到本地浏览器的传输协议，它可以使浏览器更加高效，使网络传输减少。")]),n._v(" "),v("li",[n._v("HTTPS：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL。")]),n._v(" "),v("li",[n._v("HTTPS协议的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。")]),n._v(" "),v("li",[n._v("区别：\n"),v("ol",[v("li",[n._v("https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。")]),n._v(" "),v("li",[n._v("http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。")]),n._v(" "),v("li",[n._v("http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。")]),n._v(" "),v("li",[n._v("http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。")])])])])])])])]),n._v(" "),v("hr"),n._v(" "),v("ol",[v("li",[v("p",[n._v("HTTP")]),n._v(" "),v("ol",[v("li",[n._v("超文本传输协议( Hyper Text Transfer Protocol ),一种应用层协议,是万维网数据通信的基础")]),n._v(" "),v("li",[n._v("作用\n"),v("ol",[v("li",[n._v("规定了浏览器和web服务器发送和响应数据的格式")])])]),n._v(" "),v("li",[n._v("特点\n"),v("ol",[v("li",[n._v("请求+响应模式")]),n._v(" "),v("li",[n._v("无状态传输协议")])])]),n._v(" "),v("li",[n._v("长连接，短连接问题\n"),v("ol",[v("li",[n._v("长连接\n"),v("ol",[v("li",[n._v("长连接可以省去较多的TCP建立和关闭的操作，节约时间")]),n._v(" "),v("li",[n._v("服务器压力比较大，设置连接时间，客户端一定时间内没有进行通信,服务器会主动断开连接")])])]),n._v(" "),v("li",[n._v("短连接\n"),v("ol",[v("li",[n._v("短连接对于服务器来说实现起来较为简单，服务器压力小")]),n._v(" "),v("li",[n._v("相对而言请求响应时间会变长")])])])])])])]),n._v(" "),v("li",[v("p",[n._v("请求报文格式")]),n._v(" "),v("ol",[v("li",[n._v("完整格式\n"),v("ol",[v("li",[n._v("请求行")]),n._v(" "),v("li",[n._v("请求头")]),n._v(" "),v("li",[n._v("空行rn    -> 作用分割请求头和请求体的数据标记")]),n._v(" "),v("li",[n._v("请求体  扩展： get请求没有请求体，post请求有请求体")])])]),n._v(" "),v("li",[n._v("请求方式\n"),v("ol",[v("li",[n._v("请求指定的页面信息，并返回实体主体。\n"),v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("GET")])]),n._v(" "),v("li",[n._v("类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头\nHEAD")]),n._v(" "),v("li",[n._v("向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。\n"),v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("POST")])]),n._v(" "),v("li",[n._v("从客户端向服务器传送的数据取代指定的文档的内容。\n"),v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("PUT")])]),n._v(" "),v("li",[n._v("PATCH\n"),v("ul",[v("li",[n._v("类似于put，只不过是部分更新")])])]),n._v(" "),v("li",[n._v("请求服务器删除指定的页面。\n"),v("span",{staticStyle:{"background-color":"#ffaaaa"}},[n._v("DELETE")])]),n._v(" "),v("li",[n._v("HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。\nCONNECT")]),n._v(" "),v("li",[n._v("允许客户端查看服务器的性能。\nOPTIONS")]),n._v(" "),v("li",[n._v("回显服务器收到的请求，主要用于测试或诊断。\nTRACE")])])])])]),n._v(" "),v("li",[v("p",[n._v("响应报文")]),n._v(" "),v("ol",[v("li",[n._v("完整格式\n"),v("ol",[v("li",[n._v("响应行")]),n._v(" "),v("li",[n._v("响应头")]),n._v(" "),v("li",[n._v("空行rn")]),n._v(" "),v("li",[n._v("响应体")])])]),n._v(" "),v("li",[n._v("状态码\n"),v("ol",[v("li",[n._v("100：\n"),v("ol",[v("li",[n._v("100：继续，客户端继续进行请求")])])]),n._v(" "),v("li",[n._v("200：")]),n._v(" "),v("li",[n._v("300：")]),n._v(" "),v("li",[n._v("400：")]),n._v(" "),v("li",[n._v("500：")])])])])]),n._v(" "),v("li",[v("p",[n._v("HTTPS")]),n._v(" "),v("ol",[v("li",[n._v("SSL(Secure Sockets Layer\n"),v("ol",[v("li",[n._v("SSL协议位于")])])])])])]),n._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[n._v('100 Continue\n继续。客户端应继续其请求\n101\nSwitching Protocols\n切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议\n200 OK\n请求成功。一般用于GET与POST请求\n201  Created\n已创建。成功请求并创建了新的资源\n202\nAccepted\n已接受。已经接受请求，但未处理完成\n203\nNon-Authoritative Information\n非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本\n204\nNo Content\n无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档\n205\nReset Content\n重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域\n206\nPartial Content\n部分内容。服务器成功处理了部分GET请求\n300\nMultiple Choices\n多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\n301 Moved Permanently\n永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\n302 Found\n临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI\n303\nSee Other\n查看其它地址。与301类似。使用GET和POST请求查看\n304\nNot Modified\n未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\n305\nUse Proxy\n使用代理。所请求的资源必须通过代理访问\n306\nUnused\n已经被废弃的HTTP状态码\n307\nTemporary Redirect\n临时重定向。与302类似。使用GET请求重定向\n400 Bad Request\n客户端请求的语法错误，服务器无法理解\n401  Unauthorized\n请求要求用户的身份认证\n402\nPayment Required\n保留，将来使用\n403 Forbidden\n服务器理解请求客户端的请求，但是拒绝执行此请求\n404\nNot Found\n服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置"您所请求的资源无法找到"的个性页面\n405\nMethod Not Allowed\n客户端请求中的方法被禁止\n406\nNot Acceptable\n服务器无法根据客户端请求的内容特性完成请求\n407\nProxy Authentication Required\n请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权\n408\nRequest Time-out\n服务器等待客户端发送的请求时间过长，超时\n409\nConflict\n服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突\n410\nGone\n客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置\n411\nLength Required\n服务器无法处理客户端发送的不带Content-Length的请求信息\n412\nPrecondition Failed\n客户端请求信息的先决条件错误\n413\nRequest Entity Too Large\n由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息\n414 Request-URI Too Large\n请求的URI过长（URI通常为网址），服务器无法处理\n415\nUnsupported Media Type\n服务器无法处理请求附带的媒体格式\n416\nRequested range not satisfiable\n客户端请求的范围无效\n417\nExpectation Failed\n服务器无法满足Expect的请求头信息\n500  Internal Server Error\n服务器内部错误，无法完成请求\n501\nNot Implemented\n服务器不支持请求的功能，无法完成请求\n502\nBad Gateway\n充当网关或代理的服务器，从远端服务器接收到了一个无效的请求\n503  Service Unavailable\n由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中\n504\nGateway Time-out\n充当网关或代理的服务器，未及时从远端服务器获取请求\n505  HTTP Version not supported\n服务器不支持请求的HTTP协议的版本，无法完成处理\n')])])])])}),[],!1,null,null,null);l.default=_.exports}}]);