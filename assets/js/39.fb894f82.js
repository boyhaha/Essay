(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{405:function(t,e,n){"use strict";n.r(e);var s=n(44),l=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"面试-01-清数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试-01-清数"}},[t._v("#")]),t._v(" 面试 01-清数")]),t._v(" "),n("ol",[n("li",[t._v("为什么离职")]),t._v(" "),n("li",[t._v("技术栈")]),t._v(" "),n("li",[t._v("数据结构化到什么程度")]),t._v(" "),n("li",[t._v("ES搜索引擎 如何根据文档中的type进行")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('2.2 查询某个index下所有的type: \n$ curl localhost:9200/films/_search \n\n2.3 查询某个index 下， 某个 type下所有的记录： \n$ curl localhost:9200/films/md/_search?pretty=true \n\n加上 pretty 参数， 正如前面的例子中看到的，这将会调用 Elasticsearch 的 pretty-print 功能，该功能 使得 JSON 响应体更加可读\n\n创建一个新的索引test，设置分片数为1，通过mapping初始化一个type1,type1有一个属性field1\ncurl -XPUT http://localhost:9200/test -d\'\n{\n    "settings" : {\n        "number_of_shards" : 1\n    },\n    "mappings" : {\n        "type1" : {\n            "properties" : {\n                "field1" : { "type" : "text" }\n            }\n        }\n    }\n}\n\n')])])])])}),[],!1,null,null,null);e.default=l.exports}}]);