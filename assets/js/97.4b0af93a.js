(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{462:function(_,v,t){"use strict";t.r(v);var p=t(44),n=Object(p.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"基础-10-模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-10-模块"}},[_._v("#")]),_._v(" 基础 10-模块")]),_._v(" "),t("p"),_._v(" "),t("p",[_._v("2. 模块")]),_._v(" "),t("p",[_._v("i. 自定义模块：")]),_._v(" "),t("p",[_._v("一般自定义模块后，程序员首先需要自测。一般创建一个  main函数进行自测")]),_._v(" "),t("p",[_._v("ii. 导入")]),_._v(" "),t("p",[_._v("1) import  调用时：模块名.函数名\n                2) from…import  导入指定模块\n                3) from modname import *  导入全部项目\n                1) modname 模块中有__all__的话，只会导入__all__中的部分\n                2) "),t("strong",[_._v("all")]),_._v('=[""]')]),_._v(" "),t("p",[_._v("4) as  设置别名")]),_._v(" "),t("p",[_._v("5) 模块位置的搜索顺序")]),_._v(" "),t("p",[_._v("模块搜索路径存储在system模块的sys.path变量中。变量里包含当前目录，PYTHONPATH和由安装过程决定的默认目录。")]),_._v(" "),t("p",[_._v("iii. 根据__name__的值是直接执行（"),t("strong",[_._v("name__为__main")]),_._v("）的python脚本还是被引入（__name__为模块名）执行的，从而有选择性的决定是否执行测试代码")]),_._v(" "),t("p",[_._v("if "),t("strong",[_._v("name")]),_._v(" == '"),t("strong",[_._v("main")]),_._v("':")]),_._v(" "),t("p",[_._v("模块中有__all__的话，")]),_._v(" "),t("p",[_._v("iv. Python中的包")]),_._v(" "),t("p",[_._v("• 包将有联系的模块组织在一起，即放到同一个文件夹下，并且在这个文件夹创建一个名字为__init__.py 文件，那么这个文件夹就称之为包")]),_._v(" "),t("p",[_._v("• 有效避免模块名称冲突问题，让应用组织结构更加清晰")]),_._v(" "),t("p",[_._v("• 想使用本包中的另一个模块，也需要要加包名")]),_._v(" "),t("p"),_._v(" "),t("p"),_._v(" "),t("p",[_._v("在__init__.py文件中，定义一个__all__变量，它控制着 from modname import * 时导入的模块")]),_._v(" "),t("p"),_._v(" "),t("p",[_._v("from .import mode1      . 表示当前目录")]),_._v(" "),t("p"),_._v(" "),t("p",[_._v("3.os模块负责程序与操作系统的交互，提供了访问操作系统底层的接口;")]),_._v(" "),t("p",[_._v("sys模块负责程序与python解释器的交互，提供了一系列的函数和变量，用于操控python的运行时环境。")])])}),[],!1,null,null,null);v.default=n.exports}}]);