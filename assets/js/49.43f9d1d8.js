(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{414:function(e,l,t){"use strict";t.r(l);var i=t(44),r=Object(i.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_05-函数式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-函数式编程"}},[e._v("#")]),e._v(" 05-函数式编程")]),e._v(" "),t("ul",[t("li",[e._v("高阶函数\n"),t("ul",[t("li",[e._v("map(function, iterable)\n"),t("ul",[t("li",[e._v("map()函数接收两个参数，一个是函数，一个是Iterable，map将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回")]),e._v(" "),t("li",[e._v("把运算规则抽象")]),e._v(" "),t("li",[t("blockquote",[t("p",[e._v("def f(x):... return x * x")])])])])]),e._v(" "),t("li",[e._v("reduce\n"),t("ul",[t("li",[e._v("reduce把一个函数作用在一个序列[x1, x2, x3, ...]上，这个函数必须接收两个参数，reduce把结果继续和序列的下一个元素做累积计算，其效果就是：")]),e._v(" "),t("li",[e._v("reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)")]),e._v(" "),t("li",[e._v("把序列[1, 3, 5, 7, 9]变换成整数13579，reduce就可以派上用场：")]),e._v(" "),t("li",[t("blockquote",[t("p",[e._v("from functools import reduce")])])])])]),e._v(" "),t("li",[e._v("filter(function, iterable)\n"),t("ul",[t("li",[e._v("用于过滤序列")]),e._v(" "),t("li",[e._v("filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素。")])])]),e._v(" "),t("li",[e._v("sorted（不会修改原序列，临时排序）\n"),t("ul",[t("li",[e._v("sorted()函数也是一个高阶函数，它还可以接收一个key函数来实现自定义的排序，例如按绝对值大小排序：")]),e._v(" "),t("li",[e._v("sorted([36, 5, -12, 9, -21], key=abs)")]),e._v(" "),t("li",[e._v("要进行反向排序，不必改动key函数，可以传入第三个参数reverse=True：")])])])])]),e._v(" "),t("li",[e._v("返回函数\n"),t("ul",[t("li",[e._v("涉及到闭包")])])]),e._v(" "),t("li",[e._v("偏函数\n"),t("ul",[t("li",[e._v("functools.partial 将部分参数固定")]),e._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  >>> import functools\n  >>> int2 = functools.partial(int, base=2)\n  >>> int2('1000000')\n  64\n  >>> int2('1010101')\n  85\n")])])])])])])])])}),[],!1,null,null,null);l.default=r.exports}}]);