(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{441:function(n,_,t){"use strict";t.r(_);var e=t(44),l=Object(e.a)({},(function(){var n=this,_=n.$createElement,t=n._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_51-单例模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_51-单例模式"}},[n._v("#")]),n._v(" 51-单例模式")]),n._v(" "),t("ul",[t("li",[n._v("基于__new__(线程安全)")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('import threading\n\nclass Singleton(object):\n        __instance_lock = threading.Lock()\n        __fist_flag = True\n\n        def __init__(self):\n                if self.__fist_flag:\n                    self.__fist_flag = False\n\n        def __new__(cls, *args, **kwargs):\n                if not hasattr(Singleton, "__instance_lock"):\n                        with Singleton.__instance_lock:\n                                if not hasattr(Singleton, "__instance_lock"):\n                                        Singleton.__instance_lock = object.__new__(cls)\n                return Singleton.__instance_lock\n')])])]),t("ul",[t("li",[n._v("使用装饰器")]),n._v(" "),t("li",[n._v("使用模块：天然的单例")]),n._v(" "),t("li",[n._v("使用元类")])]),n._v(" "),t("p",[n._v("使用场景")]),n._v(" "),t("ul",[t("li",[n._v("资源共享的情况下，避免由于资源操作时导致的性能损耗。如日志文件，应用配置。")]),n._v(" "),t("li",[n._v("控制资源的情况下，方便资源之间的互相通信。如线程池等。\n"),t("ul",[t("li",[n._v("1.网站的计数器 2.应用配置 3.多线程池 4.数据库配置，数据库连接池 5.应用程序的日志应用....")])])])])])}),[],!1,null,null,null);_.default=l.exports}}]);