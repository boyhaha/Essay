(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{459:function(v,_,l){"use strict";l.r(_);var t=l(44),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h1",{attrs:{id:"基础-03-python与其他语言的比较"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#基础-03-python与其他语言的比较"}},[v._v("#")]),v._v(" 基础 03-Python与其他语言的比较")]),v._v(" "),l("ul",[l("li",[l("p",[v._v("python相对与其他语言有什么优点和缺点？")]),v._v(" "),l("ul",[l("li",[v._v("优点\n"),l("ul",[l("li",[v._v("简单，一种代表简单思想的语言，伪代码本质，可以专注于解决问题而不是语言本身。")]),v._v(" "),l("li",[v._v("易学，容易上手")]),v._v(" "),l("li",[v._v("免费开源")]),v._v(" "),l("li",[v._v("高层语言，无需考虑底层细节")]),v._v(" "),l("li",[v._v("可移植性，跨平台很容易")]),v._v(" "),l("li",[v._v("解释性语言，无需担心如何编译，如何连接转载正确的库，可以直接从源码运行程序。")]),v._v(" "),l("li",[v._v("面向对象，Python既支持面向过程，也支持面向对象。")]),v._v(" "),l("li",[v._v("可扩展性，如果你需要一段关键的代码运行更快或者希望某些算法不公开，可以将部分程序用C 或 C++ 编写，然后通过python调用")]),v._v(" "),l("li",[v._v("丰富的库，python的标准库很庞大，可以处理各种工作")]),v._v(" "),l("li",[v._v("规范的代码，采用强制缩进格式使代码具有极佳的可读性")])])])])]),v._v(" "),l("li",[l("p",[v._v("缺点")]),v._v(" "),l("ul",[l("li",[v._v("Python语言非常完善，没有明显的短板和缺点，唯一的缺点就是执行效率有点慢，不过这也是解释型语言的通病，可以被强大的计算机性能弥补")])])]),v._v(" "),l("li",[l("p",[l("strong",[v._v("解释型语言和编译型语言的区别")])]),v._v(" "),l("ul",[l("li",[v._v("编译型语言\n"),l("ul",[l("li",[v._v("需要使用专门的编译器，将针对某一特定平台的某种高级语言源代码一次性“翻译”成该平台硬件执行的机器码（包括指令和操作数），并包装成该平台所能识别的可执行程序的格式。有可能还有对其他编译好的模块进行链接，实现一些代码的复用")]),v._v(" "),l("li",[v._v("可以脱离开发环境，在特定平台上运行")]),v._v(" "),l("li",[v._v("通常运行效率较高，但是可移植性很差")]),v._v(" "),l("li",[v._v("例如C，C++，ObjectiveC，Pascal等")])])]),v._v(" "),l("li",[v._v("解释型语言\n"),l("ul",[l("li",[v._v("指使用专门的解释器对源程序进行逐行解释成特定平台的机器码并立即执行的语言，")]),v._v(" "),l("li",[v._v("相当于把编译型语言中的编译和解释混合在了一起同时完成，因此效率比较低，而且不能脱离解释器独立运行。")]),v._v(" "),l("li",[v._v("不过它的最大优势就是跨平台容易，只需要提供特定平台的解释器即可，虽然这是在牺牲程序执行效率的基础上实现的。")])])])])])]),v._v(" "),l("p"),v._v(" "),l("p")])}),[],!1,null,null,null);_.default=i.exports}}]);